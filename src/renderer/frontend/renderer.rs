use std::error::Error;
//----------------------------------------------------------------------------------------------------------------------

use winit::{
    event::{Event, WindowEvent},
    event_loop::ControlFlow,
    platform::desktop::EventLoopExtDesktop,
};
//----------------------------------------------------------------------------------------------------------------------

use crate::core::window::Window;
use crate::renderer::RendererBackend;
//----------------------------------------------------------------------------------------------------------------------

pub struct Renderer {
    backend: RendererBackend,
}
//----------------------------------------------------------------------------------------------------------------------

impl Renderer {
    pub fn init(app_name: &str, window: &Window) -> Self {
        info!("----- Renderer::init -----");

        let backend = RendererBackend::init(app_name, window.get_window_handle());

        Self { backend }
    }
    //------------------------------------------------------------------------------------------------------------------

    pub fn run(&mut self) {
        self.backend.draw();
    }
    //------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
