use crate::core::Window;
use crate::renderer::{backend::vk::VkBackend, frontend::hal::RendererBackend};
//----------------------------------------------------------------------------------------------------------------------

pub struct Renderer<T: RendererBackend> {
    backend: T,
}
//----------------------------------------------------------------------------------------------------------------------

impl<T: RendererBackend> Renderer<T> {
    pub fn init(backend: T) -> Self {
        info!("----- Renderer::init -----");
        Self { backend }
    }
    //------------------------------------------------------------------------------------------------------------------

    pub fn run(&mut self) {
        self.backend.draw();
    }
    //------------------------------------------------------------------------------------------------------------------

    pub fn await_device_idle(&mut self) {
        self.backend.await_device_idle();
    }
    //------------------------------------------------------------------------------------------------------------------

    pub fn swap_pipelines(&mut self) {
        self.backend.swap_pipelines();
    }
    //------------------------------------------------------------------------------------------------------------------

    pub fn load_mesh(&mut self) {
        self.backend.load_mesh();
    }
    //------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
